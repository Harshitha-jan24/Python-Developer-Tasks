# -*- coding: utf-8 -*-
"""PD Task01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X2UAexxhKRon3wUPr5XHCt3SUzu31yfn
"""

# Task 1:sum of two numbers
def sum_of_two_num(num1,num2):
  return num1+num2

x,y=24,42
print("The sum of {} and {} is {}".format(x,y,sum_of_two_num(x,y)))

# Task 2:Odd or Even
def odd_or_even(num):
  if num%2==0:
    print(f"The number {num} is even")
  else:
    print(f"The number {num} is odd")

n=55
odd_or_even(n)

# Task 3:Factorial Calculation
def factorial(num):
  return 1 if num==0 else num*factorial(num-1)

n=5
print(f"The factorial of {n} is {factorial(n)}")

#Task 4:Fibonacci series
def fibonacci_series(num):
  seq=[0,1]
  for i in range(2,num):
    seq.append(seq[-1]+seq[-2])
  return seq[:num]

n=10
print(f"The first {n} Fibonacci numbers are {fibonacci_series(n)}")

#Task 5:Reverse a String
def reverse_string(string):
  return string[::-1]

string="Python"
print(f"The reverse of {string} is {reverse_string(string)}")

#Task 6:Palindrome check
def is_palindrome(string):
  return string==string[::-1]

string="madam"
print(f"Is '{string}' a palindrome: {is_palindrome(string)}")

#Task 7:leap year check
def is_leap_year(yr):
  return yr%4==0 and (yr%100!=0 or yr%400==0)
year=2024
print(f"Is {year} a leap year: {is_leap_year(year)}")

#Task 8:Armstrong number
def is_armstrong(number):
  num_str=str(number)
  num_digits=len(num_str)
  return sum(int(digit)**num_digits for digit in num_str)==number

num=153
print(f"Is {num} an Armstrong number: {is_armstrong(num)}")

#Task 9:Custom encryption and decryption
def encrypt(text,shift):
  encrypted_text=""
  for i in text:
    if i.isalpha():
      if i.isupper():
        encrypted_text+=chr((ord(i)+shift-65)%26+65)
      else:
        encrypted_text+=chr((ord(i)+shift-97)%26+97)
    else:
      encrypted_text+=i
  return encrypted_text

def decrypt(encrypted_text,shift):
  return encrypt(encrypted_text,-shift)

msg="Python version3"
shift=3
encrypted_msg=encrypt(msg,shift)
decrypted_msg=decrypt(encrypted_msg,shift)
print(f"Original message: {msg}")
print(f"Encrypted message: {encrypted_msg}")
print(f"Decrypted message: {decrypted_msg}")

